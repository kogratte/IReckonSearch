@import '~@angular/material/core/theming/all-theme';

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
$themePrimaryColor: (
  50: #ffedc4,
  constrat: (
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A700: white
  )
);
$themeSecondayColor: (
    50: #00EFC3,
    constrat: (
      500: white,
      600: white,
      700: white,
      800: white,
      900: white,
      A700: white
    )
  );
$themeRed: (
    50: #FF0000,
    constrat: (
      500: black,
      600: black,
      700: black,
      800: black,
      900: black,
      A700:black
    )
  );

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($themePrimaryColor, A200, A400);
$candy-app-accent: mat-palette($themeSecondayColor, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($themeRed);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);
$primary-color: map_get($themePrimaryColor, 500);
$secondary-color: map_get($themeSecondayColor, 500);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
